{"version":3,"sources":["component/Artist.js","component/Track.js","component/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Artist","props","artist","name","images","genres","followers","className","src","url","total","map","item","key","Track","state","playing","audio","previewUrl","playAudio","Audio","pause","setState","play","trackIcon","tracks","this","onClick","preview_url","album","alt","Component","Search","title","onChangeTitle","bind","submitHandler","e","target","value","preventDefault","console","log","search","htmlFor","type","onChange","URI","App","artistInfo","searchArtist","fetch","then","response","json","result","artists","items","id","catch","err","message","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a5a49a8.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./artist.css\";\r\n\r\nexport default function Artist(props) {\r\n    if(!props.artist) return null;\r\n    const {  name, images, genres, followers } = props.artist;\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 col-md-offset-3 well well-lg\">\r\n                <h3 className=\"text-center\"> { name } </h3>\r\n                <img className=\"img-responsive img-circle\" src={ images[1].url } />\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        Followers <span className=\"pull-right\"> {followers.total} </span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        Genres \r\n                        \r\n                             <ul className=\"list-group\">\r\n                                 {\r\n                                     genres.map((item,key) => {\r\n                                         return <li className=\"list-group-item\" key={key}> { item } </li>\r\n                                     })\r\n                                 }\r\n                             </ul> \r\n                         \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Track extends Component {\r\n\r\n    state = {\r\n        playing: false,\r\n        audio: null,\r\n        previewUrl: null\r\n    };\r\n\r\n    // audio player\r\n    playAudio = (url) => {\r\n        const audio = new Audio(url);\r\n        \r\n        // initial play\r\n        if(!this.state.playing) {\r\n            audio.play();\r\n            this.setState({\r\n                playing: true,\r\n                audio,\r\n                previewUrl: url\r\n            });\r\n        } else {\r\n            //pause\r\n            this.state.audio.pause();\r\n\r\n            // from pause to play\r\n            if(this.state.previewUrl === url) {\r\n                this.setState({ playing: false });\r\n            } else {\r\n                audio.play();\r\n                this.setState({\r\n                    audio,\r\n                    previewUrl: url\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // play icons\r\n\r\n    trackIcon = (url) => {\r\n        if(!url) {\r\n            return <span>No track</span>;\r\n        }\r\n\r\n        if(this.state.playing && this.state.previewUrl === url) {\r\n            return <span className=\"glyphicon glyphicon-pause\"></span>;\r\n        }\r\n\r\n        return <span className=\"glyphicon glyphicon-play\"></span>;\r\n    }\r\n    \r\n    render() {\r\n        const { tracks } = this.props;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                {\r\n                    tracks.map((item,key) => {\r\n                        return (\r\n                            <div className=\"col-md-4\" key={key}>\r\n                                <div className=\"panel panel-primary\" onClick={()=> this.playAudio(item.preview_url)} >\r\n                                    <div className=\"panel-heading\">\r\n                                        <h3 className=\"panel-title\"> { item.name } </h3>\r\n                                    </div>\r\n                                    <div className=\"panel-body\">\r\n                                        <img src={item.album.images[1].url} alt=\"\" className=\"img-responsive img-circle\"/>\r\n                                    </div>\r\n                                    <div className=\"panel-footer\">\r\n                                    \r\n                                        <button className=\"btn btn-primary\">\r\n                                            { this.trackIcon(item.preview_url) }\r\n                                        </button>\r\n                \r\n                                    </div>\r\n                                </div>\r\n                            </div>    \r\n                        )\r\n                    })\r\n                }\r\n                <h3> Tracks </h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: ''\r\n        };\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n\r\n    onChangeTitle(e) {\r\n        this.setState({\r\n            title: e.target.value\r\n        });\r\n    }\r\n\r\n    submitHandler(e){\r\n        e.preventDefault(); /* avoid page reload */\r\n        console.log('title', this.state.title);\r\n        this.props.search(this.state.title);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-md-offset-3 well well-lg\">\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"artist\">Search</label>\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\" value={this.state.title} onChange={this.onChangeTitle} />\r\n                            <div className=\"input-group-btn\">\r\n                                <button className=\"btn btn-info\" onClick={this.submitHandler} >\r\n                                    <span className=\"glyphicon glyphicon-search\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\nimport Artist from './component/Artist';\nimport Track from './component/Track';\nimport Search from './component/Search';\nconst URI = \"https://spotify-api-wrapper.appspot.com\";\n\nexport default class App extends React.Component {\n\n  state = {\n    artistInfo: null,\n    tracks: []\n  };\n\n  componentDidMount() {\n      this.searchArtist(\"A R Rehman\");\n  }\n\n  \n\n  searchArtist = (name) => {\n    fetch(`${URI}/artist/${name}`)\n      .then(response => response.json())\n      .then(result => {\n        console.log(result);\n\n        if(result.artists.total > 0) {\n          const artistInfo = result.artists.items[0];\n          this.setState({\n            artistInfo\n          });\n\n          // find tracks\n          fetch(`${URI}/artist/${artistInfo.id}/top-tracks`)\n            .then(response => response.json())\n            .then(result => {\n              console.log('tracks', result.tracks);\n              this.setState({\n                tracks: result.tracks\n              });\n            })\n            .catch(err => console.log(err.message))\n        }\n          \n    })\n    .catch(err => console.log(err.message));\n    \n  }\n  \n  render() {\n    return (\n      <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12 col-sm-12 jumbotron text-center\">\n              <h3>Music Player</h3>\n            </div>\n          </div>\n          <Search search= {this.searchArtist} />\n          <Artist artist= {this.state.artistInfo} />\n          <Track tracks= {this.state.tracks} />\n          \n      </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}